{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/covid-update-temp/covid-update-temp.component.ts","webpack:///src/app/covid-update-temp/covid-update-temp.component.html","webpack:///src/app/icons-service.service.ts","webpack:///src/app/icons.ts","webpack:///src/app/info/info.component.ts","webpack:///src/app/info/info.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/materil/materil.module.ts","webpack:///src/app/work/work.component.ts","webpack:///src/app/work/work.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","_MyInfotmation","selector","templateUrl","styleUrls","routes","path","component","AppRoutingModule","forRoot","imports","routingComponent","AppComponent","iconService","title","registerIcons","AppModule","declarations","providers","bootstrap","ContactComponent","window","innerWidth","NoOfColumnsForGrid","colspan","rowHeight","CovidUpdateTempComponent","IconsServiceService","matIconRegistry","domSanitizer","loadIcons","Object","values","iconKeys","iconUrl","forEach","key","addSvgIcon","bypassSecurityTrustResourceUrl","providedIn","icons","socialAccounts","InfoComponent","sanitizer","_imagePosition","picture","MainComponent","socialMediaAcountIcons","Email","Linkedin","github","facebook","instagram","dasboardMenue","clickedIcon","open","selBox","document","createElement","value","body","appendChild","focus","select","execCommand","removeChild","item","console","log","getElementById","scrollIntoView","behavior","toLoacation","Material","MaterilModule","WorkComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  _MyInfotmation= \" I am a Software Developer living in Paris. A coding lover and game freek. Either backend or frontend, Both are very exiting to me. \";\n  constructor() { }\n\n\n  ngOnInit() {\n  }\n\n}\n","<div class = \"body\">\n    <div class=\"cardContainer\">\n        <div class =\"cardAbout\">\n            <div class=\"box \">\n                <div class=\"text\">\n\n                    <div>\n                        <h1> WHO IS THIS GUY ?</h1>\n                        <p>\n                        {{_MyInfotmation}}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class =\"cardAbout\">\n            \n            <div class =\"skillContainer\" >\n                <h1 class=\"skills\"> Skills </h1>\n                \n                <div >\n                    <a><span> JAVA Core  </span> </a>\n                    <a><span> Angular 7  </span> </a>\n                    <a><span> MSSQL Server  </span> </a>  \n\n                </div>\n                <div >\n                    <a><span> JAVA Spring  </span> </a>\n                    <a><span> RPA   </span> </a>\n                    <a><span> MySQL  </span> </a>\n                </div>\n                <div >\n                    <a><span> JAVA Hibernate  </span> </a>\n                    <a><span> CI/CD </span> </a>\n                    <a><span> T-SQL  </span> </a>\n                </div>\n                <div >\n                    <a><span> Junit 5  </span> </a>\n                    <a><span> TypeScript </span> </a>\n                    <a><span> MSBI-SSIS/SSRS  </span> </a>\n                </div>\n                <div >\n                    <a><span> REST API  </span> </a>\n                    <a><span> Docker  </span> </a>\n                    <a><span> HTML/CSS  </span> </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CovidUpdateTempComponent } from './covid-update-temp/covid-update-temp.component';\nimport { InfoComponent } from './info/info.component';\n\n\nconst routes: Routes = [\n  {path: 'Covid' , component:CovidUpdateTempComponent},\n  {path: 'Home', component:InfoComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponent = \n[\n  CovidUpdateTempComponent,\n  InfoComponent\n]\n","import { Component } from '@angular/core';\nimport { IconsServiceService } from './icons-service.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private iconService : IconsServiceService){}\n\n  ngOnInit(): void {\n    this.iconService.registerIcons();\n  }\n  title = 'myWebApplicationUI';\n}\n","\n<!-- <app-info></app-info> -->\n\n<app-main></app-main>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComponent } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport {FormsModule} from '@angular/forms'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule} from '@angular/common/http'\n\nimport { MaterilModule } from './materil/materil.module';\nimport { AboutComponent } from './about/about.component';\nimport { WorkComponent } from './work/work.component';\nimport { ContactComponent } from './contact/contact.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent, \n    MainComponent,\n    AboutComponent,\n    WorkComponent,\n    ContactComponent,\n    routingComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterilModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n   NoOfColumnsForGrid ;\n   colspan;\n   rowHeight;\n  ngOnInit() {\n\n    if(window.innerWidth > 780){this.NoOfColumnsForGrid=2; this.colspan=2, this.rowHeight=\"2:0.5\"}\n    else {this.NoOfColumnsForGrid=1; this.colspan =1; this.rowHeight=\"fit\"}\n  }\n\n}\n","<meta name =\"viewport\" content=\"width=device-width , initial-scale=1.0\" >\n<body>\n    <div class=\"formContainer\">\n        <h2> Contact Me</h2>\n        <div class=\"row100\">\n        <mat-grid-list [cols]=\"NoOfColumnsForGrid\" [rowHeight]=\"rowHeight\" >\n            <mat-grid-tile>\n                <div class = \"col\">\n                    <div class=\"inputBox\">\n                        <input type=\"text\" name=\"\"  required=\"required\">\n                        <span class=\"text\">First Name</span>\n                        <span class=\"line\"></span>\n                    </div>\n                </div>\n            </mat-grid-tile>\n        \n            <mat-grid-tile>\n                <div class = \"col\">\n                    <div class=\"inputBox\">\n                        <input type=\"text\" name=\"\"  required=\"required\">\n                        <span class=\"text\">Last Name</span>\n                        <span class=\"line\"></span>\n                    </div>\n                </div>\n            </mat-grid-tile>\n        \n            <mat-grid-tile>\n                <div class = \"col\">\n                    <div class=\"inputBox\">\n                        <input type=\"text\" name=\"\" required=\"required\">\n                        <span class=\"text\">Email</span>\n                        <span class=\"line\"></span>\n                    </div>\n                </div>\n            </mat-grid-tile>\n        \n            <mat-grid-tile>\n                <div class = \"col\">\n                    <div class=\"inputBox\">\n                        <input type=\"text\" name=\"\"  required=\"required\">\n                        <span class=\"text\">Mobile</span>\n                        <span class=\"line\"></span>\n                    </div>\n                </div>\n            </mat-grid-tile>\n        \n\n            <mat-grid-tile [colspan]=\"colspan\">\n                <div class = \"col\" >\n                    <div class=\"inputBox textarea\" >\n                        <textarea required=\"required\"></textarea>\n                        <span class=\"text\">Message</span>\n                        <span class=\"line\"></span>\n                    </div>\n                </div>\n            </mat-grid-tile>\n\n            <mat-grid-tile  [colspan]=\"colspan\">\n\n                <div class = \"col\" >\n                    <input type=\"submit\" value=\"send\" >\n                </div>\n            </mat-grid-tile>\n        </mat-grid-list>\n        </div> \n    </div>\n    <!-- <div>\n        Photo by Markus Spiske on Unsplash\n    </div> -->\n</body>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-covid-update-temp',\n  templateUrl: './covid-update-temp.component.html',\n  styleUrls: ['./covid-update-temp.component.css']\n})\nexport class CovidUpdateTempComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>covid-update-temp works!</p>\n","import { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { icons } from './icons';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IconsServiceService {\n\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) { }\n\n  public registerIcons(): void {\n    \n     this.loadIcons(Object.values(icons), './assets/svg');\n  }\n  public loadIcons(iconKeys: string[], iconUrl: string){\n\n    iconKeys.forEach(key => {\n      this.matIconRegistry.addSvgIcon(key, this.domSanitizer.bypassSecurityTrustResourceUrl(`${iconUrl}/${key}.svg`));\n    });\n\n  }\n}\n","export enum icons{\r\n    Linkedin = \"linkedin\",\r\n    Email = \"email\",\r\n    instagram = \"instagram\",\r\n    facebook= \"facebook\",\r\n    github = \"github\"\r\n}\r\n\r\nexport enum socialAccounts{\r\n    linkedin = \"https://www.linkedin.com/in/shivank-mittal-09055ba3\",\r\n    email = \"email\",\r\n    instagram = \"https://www.instagram.com/shivank.m/\",\r\n    facebook= \"https://www.facebook.com/shivank.mittal.7\",\r\n    github = \"https://github.com/Shivank-Mittal\"\r\n}","import { Component, OnInit, HostListener } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.css']\n})\nexport class InfoComponent implements OnInit {\n\n  _imagePosition = \"relative\";  \n  public picture = \"./assets/pictures/SMDesinged.jpg\";\n\n  \n  constructor(private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    \n  }\n\n}\n","\n<div id=\"main\">\n    <section id=\"HOME\" >\n        <div class = \"sec\">\n\n            \n        <div id=\"bg\"></div>\n        <div class = \"scrollDown\">\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span>\n        </div>\n\n        </div>\n        \n        <div class=\"img-container\"> \n        </div>\n         \n\n    </section>\n    \n\n\n    <section id=\"ABOUT\"   >\n        <div class = \"sec\">\n         <app-about></app-about>\n        </div>\n    </section>\n    <section id=\"WORK\"  >\n        <div class = \"sec\"><app-work></app-work></div>\n        \n    </section>\n    <section id=\"CONTACT\" >\n        <div class = \"sec\"><app-contact></app-contact></div>\n    </section>\n\n<!-- <script type=\"text/javascript\">\n    var section = document.querySelector('containerImge');\n    window.addEventListener('scroll',function(){\n        var value = window.scrollY;\n        section.style.clipPath = \"circle(\" + value + \"% at 45% 40% )\" \n    })\n</script> -->\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { icons, socialAccounts } from '../icons';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n\n  public socialMediaAcountIcons = [icons.Email, icons.Linkedin, icons.github , icons.facebook, icons.instagram];\n  public dasboardMenue = [\"ABOUT\",\"WORK\",\"CONTACT\"];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public goToLink(clickedIcon : string){\n\n    if(clickedIcon != icons.Email){\n\n      window.open(socialAccounts[clickedIcon]);\n    }\n    else{\n      const selBox = document.createElement('textarea');\n      selBox.value = \"mittal.shivank@gmail.com\";\n      document.body.appendChild(selBox);\n      selBox.focus();\n      selBox.select();\n      document.execCommand('copy');\n      document.body.removeChild(selBox);\n\n    }\n}\n  public toLoacation( item : string)\n  {\n    console.log(\"test\");\n    console.log(item)\n    document.getElementById(item).scrollIntoView({behavior:\"smooth\"});\n  }\n\n\n}\n","\n<div class=\"navBar\">\n<mat-toolbar  >\n    <mat-toolbar-row>\n        <div class = toolbar >\n            <a (click) = \"toLoacation('HOME')\">HOME</a>\n        </div>\n        <div class = toolbar>\n            <span *ngFor=\"let item of dasboardMenue\">\n                <a (click) = \"toLoacation(item)\"  >{{item}}</a>\n            </span>  \n        </div>\n        <div  class = toolbar>\n            <span *ngFor=\"let icon of socialMediaAcountIcons\">\n                <a (click) = \"goToLink(icon)\" href=\"#\"> <mat-icon svgIcon={{icon}}></mat-icon></a>\n            </span> \n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n</div>\n<div class=\"info\">\n    <app-info></app-info>\n</div>\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\nconst Material =[\n  MatButtonModule,\n  MatSliderModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatGridListModule,\n  MatListModule \n]\n\n\n@NgModule({\n  imports: [Material],\n  exports:[Material]\n})\nexport class MaterilModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-work',\n  templateUrl: './work.component.html',\n  styleUrls: ['./work.component.css']\n})\nexport class WorkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<body>\n    \n\n    <div class=\"cardContainer\">\n        <div class =\"card\">\n            <div class=\"face face1\">\n                <div class=\"content\">\n                    <mat-icon>important_devices</mat-icon>\n                    <h3>Supply Chain Dashboard</h3>\n\n                </div>\n            </div>\n            <div class=\"face face2\">\n                <div class=\"content\">\n                    <p>Création d'un tableau de bord web intelligent pour la gestion de la chaîne\n                        d'approvisionnement et d'un modèle de prévision probabiliste. Travail sur les API REST,\n                        Angular 7 et TypeScript utilisés pour le projet\n                    </p>\n            </div>\n            </div>\n\n        </div>\n\n        <div class =\"card\">\n            <div class=\"face face1\">\n                <div class=\"content\">\n                    <mat-icon>code</mat-icon>\n                    <h3>Quiz System</h3>\n\n                </div>\n            </div>\n            <div class=\"face face2\">\n                <div class=\"content\">\n                    <p>Création d'une application Web pour le quiz. L'application\n                        peut afficher une série de questions et un utilisateur peut donner les\n                        réponses. Java, Angular et REST sont utilisés pour le développement\n                    </p>\n            </div>\n            </div>\n\n        </div>\n        <div class =\"card\">\n            <div class=\"face face1\">\n                <div class=\"content\">\n                    <mat-icon>computer</mat-icon>\n                    <h3>Automation</h3>\n\n                </div>\n            </div>\n            <div class=\"face face2\">\n                <div class=\"content\">\n                    <p>Création d'une application Web pour le quiz. L'application\n                        peut afficher une série de questions et un utilisateur peut donner les\n                        réponses. Java, Angular et REST sont utilisés pour le développement\n                    </p>\n            </div>\n            </div>\n\n        </div>\n    </div>\n\n</body>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}