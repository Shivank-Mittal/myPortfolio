{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/covid-update-temp/covid-update-temp.component.ts","./src/app/covid-update-temp/covid-update-temp.component.html","./src/app/icons-service.service.ts","./src/app/icons.ts","./src/app/info/info.component.ts","./src/app/info/info.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/materil/materil.module.ts","./src/app/work/work.component.ts","./src/app/work/work.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  _MyInfotmation= \" I am a Software Developer living in Paris. A coding lover and game freek. Either backend or frontend, Both are very exiting to me. \";\n  constructor() { }\n\n\n  ngOnInit() {\n  }\n\n}\n","<div class = \"body\">\n    <div class=\"cardContainer\">\n        <div class =\"cardAbout\">\n            <div class=\"box \">\n                <div class=\"text\">\n\n                    <div>\n                        <h1> WHO IS THIS GUY ?</h1>\n                        <p>\n                        {{_MyInfotmation}}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class =\"cardAbout\">\n            \n            <div class =\"skillContainer\" >\n                <h1 class=\"skills\"> Skills </h1>\n                \n                <div >\n                    <a><span> JAVA Core  </span> </a>\n                    <a><span> Angular 7  </span> </a>\n                    <a><span> MSSQL Server  </span> </a>  \n\n                </div>\n                <div >\n                    <a><span> JAVA Spring  </span> </a>\n                    <a><span> RPA   </span> </a>\n                    <a><span> MySQL  </span> </a>\n                </div>\n                <div >\n                    <a><span> JAVA Hibernate  </span> </a>\n                    <a><span> CI/CD </span> </a>\n                    <a><span> T-SQL  </span> </a>\n                </div>\n                <div >\n                    <a><span> Junit 5  </span> </a>\n                    <a><span> TypeScript </span> </a>\n                    <a><span> MSBI-SSIS/SSRS  </span> </a>\n                </div>\n                <div >\n                    <a><span> REST API  </span> </a>\n                    <a><span> Docker  </span> </a>\n                    <a><span> HTML/CSS  </span> </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CovidUpdateTempComponent } from './covid-update-temp/covid-update-temp.component';\nimport { InfoComponent } from './info/info.component';\n\n\nconst routes: Routes = [\n  {path: 'Covid' , component:CovidUpdateTempComponent},\n  {path: 'Home', component:InfoComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponent = \n[\n  CovidUpdateTempComponent,\n  InfoComponent\n]\n","import { Component } from '@angular/core';\nimport { IconsServiceService } from './icons-service.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private iconService : IconsServiceService){}\n\n  ngOnInit(): void {\n    this.iconService.registerIcons();\n  }\n  title = 'myWebApplicationUI';\n}\n","\n<!-- <app-info></app-info> -->\n\n<app-main></app-main>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComponent } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport {FormsModule} from '@angular/forms'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule} from '@angular/common/http'\n\nimport { MaterilModule } from './materil/materil.module';\nimport { AboutComponent } from './about/about.component';\nimport { WorkComponent } from './work/work.component';\nimport { ContactComponent } from './contact/contact.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent, \n    MainComponent,\n    AboutComponent,\n    WorkComponent,\n    ContactComponent,\n    routingComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterilModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n   NoOfColumnsForGrid ;\n   colspan;\n   rowHeight;\n  ngOnInit() {\n\n    if(window.innerWidth > 780){this.NoOfColumnsForGrid=2; this.colspan=2, this.rowHeight=\"2:0.5\"}\n    else {this.NoOfColumnsForGrid=1; this.colspan =1; this.rowHeight=\"fit\"}\n  }\n\n}\n","<meta name =\"viewport\" content=\"width=device-width , initial-scale=1.0\" >\n<body>\n    <div class=\"formContainer\">\n        <h2> Contact Me</h2>\n        <div class=\"row100\">\n        <mat-grid-list [cols]=\"NoOfColumnsForGrid\" [rowHeight]=\"rowHeight\" >\n            <mat-grid-tile>\n                <div class = \"col\">\n                    <div class=\"inputBox\">\n                        <input type=\"text\" name=\"\"  required=\"required\">\n                        <span class=\"text\">First Name</span>\n                        <span class=\"line\"></span>\n                    </div>\n                </div>\n            </mat-grid-tile>\n        \n            <mat-grid-tile>\n                <div class = \"col\">\n                    <div class=\"inputBox\">\n                        <input type=\"text\" name=\"\"  required=\"required\">\n                        <span class=\"text\">Last Name</span>\n                        <span class=\"line\"></span>\n                    </div>\n                </div>\n            </mat-grid-tile>\n        \n            <mat-grid-tile>\n                <div class = \"col\">\n                    <div class=\"inputBox\">\n                        <input type=\"text\" name=\"\" required=\"required\">\n                        <span class=\"text\">Email</span>\n                        <span class=\"line\"></span>\n                    </div>\n                </div>\n            </mat-grid-tile>\n        \n            <mat-grid-tile>\n                <div class = \"col\">\n                    <div class=\"inputBox\">\n                        <input type=\"text\" name=\"\"  required=\"required\">\n                        <span class=\"text\">Mobile</span>\n                        <span class=\"line\"></span>\n                    </div>\n                </div>\n            </mat-grid-tile>\n        \n\n            <mat-grid-tile [colspan]=\"colspan\">\n                <div class = \"col\" >\n                    <div class=\"inputBox textarea\" >\n                        <textarea required=\"required\"></textarea>\n                        <span class=\"text\">Message</span>\n                        <span class=\"line\"></span>\n                    </div>\n                </div>\n            </mat-grid-tile>\n\n            <mat-grid-tile  [colspan]=\"colspan\">\n\n                <div class = \"col\" >\n                    <input type=\"submit\" value=\"send\" >\n                </div>\n            </mat-grid-tile>\n        </mat-grid-list>\n        </div> \n    </div>\n    <!-- <div>\n        Photo by Markus Spiske on Unsplash\n    </div> -->\n</body>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-covid-update-temp',\n  templateUrl: './covid-update-temp.component.html',\n  styleUrls: ['./covid-update-temp.component.css']\n})\nexport class CovidUpdateTempComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>covid-update-temp works!</p>\n","import { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { icons } from './icons';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IconsServiceService {\n\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) { }\n\n  public registerIcons(): void {\n    \n     this.loadIcons(Object.values(icons), './assets/svg');\n  }\n  public loadIcons(iconKeys: string[], iconUrl: string){\n\n    iconKeys.forEach(key => {\n      this.matIconRegistry.addSvgIcon(key, this.domSanitizer.bypassSecurityTrustResourceUrl(`${iconUrl}/${key}.svg`));\n    });\n\n  }\n}\n","export enum icons{\r\n    Linkedin = \"linkedin\",\r\n    Email = \"email\",\r\n    instagram = \"instagram\",\r\n    facebook= \"facebook\",\r\n    github = \"github\"\r\n}\r\n\r\nexport enum socialAccounts{\r\n    linkedin = \"https://www.linkedin.com/in/shivank-mittal-09055ba3\",\r\n    email = \"email\",\r\n    instagram = \"https://www.instagram.com/shivank.m/\",\r\n    facebook= \"https://www.facebook.com/shivank.mittal.7\",\r\n    github = \"https://github.com/Shivank-Mittal\"\r\n}","import { Component, OnInit, HostListener } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.css']\n})\nexport class InfoComponent implements OnInit {\n\n  _imagePosition = \"relative\";  \n  public picture = \"./assets/pictures/SMDesinged.jpg\";\n\n  \n  constructor(private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    \n  }\n\n}\n","\n<div id=\"main\">\n    <section id=\"HOME\" >\n        <div class = \"sec\">\n\n            \n        <div id=\"bg\"></div>\n        <div class = \"scrollDown\">\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span>\n        </div>\n\n        </div>\n        \n        <div class=\"img-container\"> \n        </div>\n         \n\n    </section>\n    \n\n\n    <section id=\"ABOUT\"   >\n        <div class = \"sec\">\n         <app-about></app-about>\n        </div>\n    </section>\n    <section id=\"WORK\"  >\n        <div class = \"sec\"><app-work></app-work></div>\n        \n    </section>\n    <section id=\"CONTACT\" >\n        <div class = \"sec\"><app-contact></app-contact></div>\n    </section>\n\n<!-- <script type=\"text/javascript\">\n    var section = document.querySelector('containerImge');\n    window.addEventListener('scroll',function(){\n        var value = window.scrollY;\n        section.style.clipPath = \"circle(\" + value + \"% at 45% 40% )\" \n    })\n</script> -->\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { icons, socialAccounts } from '../icons';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n\n  public socialMediaAcountIcons = [icons.Email, icons.Linkedin, icons.github , icons.facebook, icons.instagram];\n  public dasboardMenue = [\"ABOUT\",\"WORK\",\"CONTACT\"];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public goToLink(clickedIcon : string){\n\n    if(clickedIcon != icons.Email){\n\n      window.open(socialAccounts[clickedIcon]);\n    }\n    else{\n      const selBox = document.createElement('textarea');\n      selBox.value = \"mittal.shivank@gmail.com\";\n      document.body.appendChild(selBox);\n      selBox.focus();\n      selBox.select();\n      document.execCommand('copy');\n      document.body.removeChild(selBox);\n\n    }\n}\n  public toLoacation( item : string)\n  {\n    console.log(\"test\");\n    console.log(item)\n    document.getElementById(item).scrollIntoView({behavior:\"smooth\"});\n  }\n\n\n}\n","\n<div class=\"navBar\">\n<mat-toolbar  >\n    <mat-toolbar-row>\n        <div >\n            <a (click) = \"toLoacation('HOME')\">HOME</a>\n        </div>\n        <div>\n            <span *ngFor=\"let item of dasboardMenue\">\n                <a (click) = \"toLoacation(item)\"  >{{item}}</a>\n            </span>  \n        </div>\n        <div  >\n            <span *ngFor=\"let icon of socialMediaAcountIcons\">\n                <a (click) = \"goToLink(icon)\" href=\"#\"> <mat-icon svgIcon={{icon}}></mat-icon></a>\n            </span> \n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n</div>\n<div class=\"info\">\n    <app-info></app-info>\n</div>\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\nconst Material =[\n  MatButtonModule,\n  MatSliderModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatGridListModule,\n  MatListModule \n]\n\n\n@NgModule({\n  imports: [Material],\n  exports:[Material]\n})\nexport class MaterilModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-work',\n  templateUrl: './work.component.html',\n  styleUrls: ['./work.component.css']\n})\nexport class WorkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<body>\n    \n\n    <div class=\"cardContainer\">\n        <div class =\"card\">\n            <div class=\"face face1\">\n                <div class=\"content\">\n                    <mat-icon>important_devices</mat-icon>\n                    <h3>Supply Chain Dashboard</h3>\n\n                </div>\n            </div>\n            <div class=\"face face2\">\n                <div class=\"content\">\n                    <p>Création d'un tableau de bord web intelligent pour la gestion de la chaîne\n                        d'approvisionnement et d'un modèle de prévision probabiliste. Travail sur les API REST,\n                        Angular 7 et TypeScript utilisés pour le projet\n                    </p>\n            </div>\n            </div>\n\n        </div>\n\n        <div class =\"card\">\n            <div class=\"face face1\">\n                <div class=\"content\">\n                    <mat-icon>code</mat-icon>\n                    <h3>Quiz System</h3>\n\n                </div>\n            </div>\n            <div class=\"face face2\">\n                <div class=\"content\">\n                    <p>Création d'une application Web pour le quiz. L'application\n                        peut afficher une série de questions et un utilisateur peut donner les\n                        réponses. Java, Angular et REST sont utilisés pour le développement\n                    </p>\n            </div>\n            </div>\n\n        </div>\n        <div class =\"card\">\n            <div class=\"face face1\">\n                <div class=\"content\">\n                    <mat-icon>computer</mat-icon>\n                    <h3>Automation</h3>\n\n                </div>\n            </div>\n            <div class=\"face face2\">\n                <div class=\"content\">\n                    <p>Création d'une application Web pour le quiz. L'application\n                        peut afficher une série de questions et un utilisateur peut donner les\n                        réponses. Java, Angular et REST sont utilisés pour le développement\n                    </p>\n            </div>\n            </div>\n\n        </div>\n    </div>\n\n</body>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}